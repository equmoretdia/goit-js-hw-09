{"mappings":"oeAEA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASG,iBAAiB,SAClCC,OAAQJ,SAASG,iBAAiB,UAcpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAlBbT,EAAKI,OAAOa,SAAQC,IAClBA,EAAMC,MAAMC,QAAU,cAAc,IAEtCpB,EAAKM,OAAOW,SAAQI,IAClBA,EAAMF,MAAMC,QAAU,OAAO,IAqC/BpB,EAAKC,KAAKqB,iBAAiB,UAnB3B,SAAsBC,GACpBA,EAAMC,iBACN,MAAMvB,EAAOsB,EAAME,cACbC,EAAaC,OAAO1B,EAAK2B,SAASnB,MAAMoB,OACxCC,EAAOH,OAAO1B,EAAK2B,SAASE,KAAKD,OACjCE,EAASJ,OAAO1B,EAAK2B,SAASG,OAAOF,OAC3C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IAAY,CAErDzB,EAAcyB,EADAN,GAAcM,EAAW,GAAKF,GAEzCG,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBX,EAAAoC,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBX,EAAAoC,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEhER,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["//imports\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n//selectors\nconst refs = {\n  form: document.querySelector('.form'),\n  labels: document.querySelectorAll('label'),\n  inputs: document.querySelectorAll('input'),\n};\n\n//inline styles\n\nrefs.labels.forEach(label => {\n  label.style.display = 'inline-block';\n});\nrefs.inputs.forEach(input => {\n  input.style.display = 'block';\n});\n\n//functions\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const form = event.currentTarget;\n  const startDelay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n  for (let position = 1; position <= amount; position++) {\n    const delay = startDelay + (position - 1) * step;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    form.reset();\n  }\n}\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","labels","querySelectorAll","inputs","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","forEach","label","style","display","input","addEventListener","event","preventDefault","currentTarget","startDelay","Number","elements","value","step","amount","position1","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.945488b2.js.map"}